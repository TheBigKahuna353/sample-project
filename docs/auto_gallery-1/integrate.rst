
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_gallery-1\integrate.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_gallery-1_integrate.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_gallery-1_integrate.py:


Author: Abdur-Rahmaan Janhangeer
Github: https://github.com/Abdur-rahmaanJ

.. GENERATED FROM PYTHON SOURCE LINES 5-61

.. code-block:: default


    # from https://pythonguides.com/create-a-game-using-python-pygame/
    # Hooman >= 0.8.2

    import pygame


    from hooman import Hooman # <-- this


    black = (0, 0, 0)
    white = (255, 255, 255)

    red = (255, 0, 0)
    WIDTH = 20
    HEIGHT = 20
    MARGIN = 5
    grid = []
    for row in range(10):
        grid.append([])
        for column in range(10):
            grid[row].append(0) 
    grid[1][5] = 1
    pygame.init()
    window_size = [255, 255]
    scr = pygame.display.set_mode(window_size)
    hapi = Hooman(integrate=True, screen=scr) # <-- this
    pygame.display.set_caption("Grid")
    done = False
    clock = pygame.time.Clock()
    while not done:
        for event in pygame.event.get(): 
            if event.type == pygame.QUIT: 
                done = True 
            elif event.type == pygame.MOUSEBUTTONDOWN:
                pos = pygame.mouse.get_pos()
                column = pos[0] // (WIDTH + MARGIN)
                row = pos[1] // (HEIGHT + MARGIN)
                grid[row][column] = 1
                print("Click ", pos, "Grid coordinates: ", row, column)
        scr.fill(black)
        for row in range(10):
            for column in range(10):
                color = white
                if grid[row][column] == 1:
                    color = red
                pygame.draw.rect(scr,
                                 color,
                                 [(MARGIN + WIDTH) * column + MARGIN,
                                  (MARGIN + HEIGHT) * row + MARGIN,
                                  WIDTH,
                                  HEIGHT])
        clock.tick(50)
        pygame.display.flip()
        hapi.record() # <-- this
    pygame.quit()
    hapi.save_record('testmov.mp4') # <-- this

.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_gallery-1_integrate.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: integrate.py <integrate.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: integrate.ipynb <integrate.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
