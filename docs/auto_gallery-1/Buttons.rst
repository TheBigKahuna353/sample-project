
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_gallery-1\Buttons.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_gallery-1_Buttons.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_gallery-1_Buttons.py:


Author: https://github.com/TheBigKahuna353
Edit: https://github.com/Abdur-rahmaanJ

.. GENERATED FROM PYTHON SOURCE LINES 5-105

.. code-block:: default


    from hooman import Hooman

    import pygame

    window_width, window_height = 500, 500
    hapi = Hooman(window_width, window_height)

    bg_col = (255, 255, 255)

    # the function that gets called when the button is clicked on
    def button_clicked(this):
        if this.y == 250:
            this.y = 300
        else:
            this.y = 250


    grey_style = {
        "background_color": (200, 200, 200),
        "hover_background_color": (220, 220, 220),
        "curve": 0.1,
        "padding_x": 5,
        "padding_y": 5,
        "font_size": 15,
    }


    def button_enter(this):
        hapi.set_background(hapi.color["green"])


    def button_exit(this):
        hapi.set_background(hapi.color["white"])


    stylex = grey_style.copy()
    stylex["on_enter"] = button_enter
    stylex["on_exit"] = button_exit

    button1 = hapi.button(150, 150, 100, 50, "Click Me", grey_style)

    buttonx = hapi.button(150, 10, 100, 50, "Hover Me", stylex)

    button2 = hapi.button(
        150,
        250,
        100,
        50,
        "No Click Me",
        {
            "background_color": (200, 200, 200),
            "hover_background_color": (220, 220, 220),
            "outline": True,
            "outline_color": (200, 200, 200),
            "outline_thickness": 5,
            "curve": 0.3,
            "on_click": button_clicked,
            "padding_x": 40,
            "padding_y": 10,
            "font_size": 15,
        },
    )


    def handle_events(event):
        if event.type == pygame.QUIT:
            hapi.is_running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_ESCAPE:
                hapi.is_running = False


    hapi.handle_events = handle_events

    clock = pygame.time.Clock()

    hapi.set_background(hapi.colour["white"])

    while hapi.is_running:

        if button1.update():  # if the button was clicked
            bg_col = (255, 0, 0) if bg_col == (255, 255, 255) else (255, 255, 255)
            hapi.set_background(bg_col)

        # for i in range(5):
        #     x = hapi.button(10+i*80, hapi.mouseY(), "Click Me",
        #         grey_style
        #     )
        # don't use it for ui elements in loop lile the above
        # each element can also be individually
        # updated
        hapi.update_ui()
        hapi.event_loop()

        hapi.flip_display()

        clock.tick(60)

    pygame.quit()


.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.000 seconds)


.. _sphx_glr_download_auto_gallery-1_Buttons.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: Buttons.py <Buttons.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: Buttons.ipynb <Buttons.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
